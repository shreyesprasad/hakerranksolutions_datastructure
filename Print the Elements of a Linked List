#include <bits/stdc++.h>

using namespace std;

class SinglyLinkedListNode {
    public:
        int data;
        SinglyLinkedListNode *next;

        SinglyLinkedListNode(int node_data) {
            this->data = node_data;
            this->next = nullptr;
        }
};

class SinglyLinkedList {
    public:
        SinglyLinkedListNode *head;
        SinglyLinkedListNode *tail;

        SinglyLinkedList() {
            this->head = nullptr;
            this->tail = nullptr;
        }
// function to insert new node
        void insert_node(int node_data) {
            SinglyLinkedListNode* node = new SinglyLinkedListNode(node_data);

            if (!this->head) {
                this->head = node;
            } else {
                this->tail->next = node;
            }

            this->tail = node;
        }
};


void free_singly_linked_list(SinglyLinkedListNode* node) {
    while (node) {
        SinglyLinkedListNode* temp = node;
        node = node->next;

        free(temp);
    }
}

// Complete the printLinkedList function below.

/*
 * For your reference:
 *
 * SinglyLinkedListNode {
 *     int data;
 *     SinglyLinkedListNode* next;
 * };
 *
 */
void printLinkedList(SinglyLinkedListNode* head) 
{
    while(head!=NULL)//traverses to end of list or till it rerurns null
    {
        cout<<head->data<<"\n";
        head=head->next;//points to the next node
    }


}

int main()
{
    SinglyLinkedList* llist = new SinglyLinkedList(); //creats object llist

    int llist_count;
    cin >> llist_count;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');   //'\n' sets the delimiter, i.e. the character after which cin stops ignoring
    /*numeric_limits<streamsize>::max() sets the maximum number of characters to ignore. 
   Since this is the upper limit on the size of a stream, 
    you are effectively telling cin that there is no limit to the number of characters to ignore.*/

    for (int i = 0; i < llist_count; i++) {
        int llist_item;
        cin >> llist_item;
        cin.ignore(numeric_limits<streamsize>::max(), '\n');

        llist->insert_node(llist_item); // calls function insert_node
    }

    printLinkedList(llist->head);// calling function printLinked list

    return 0;
}
